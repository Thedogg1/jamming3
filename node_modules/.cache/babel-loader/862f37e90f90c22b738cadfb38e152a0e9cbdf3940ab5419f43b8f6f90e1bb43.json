{"ast":null,"code":"var _jsxFileName = \"C:\\\\inetpub\\\\wwwroot\\\\Projects\\\\Jamming\\\\jamming\\\\src\\\\components\\\\app\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport PlayList from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'name1',\n        artist: 'artist1',\n        album: 'album1',\n        id: 1\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        album: 'album2',\n        id: 2\n      }, {\n        name: 'name3',\n        artist: 'artist3',\n        album: 'album3',\n        id: 3\n      }, {\n        name: 'name4',\n        artist: 'artist4',\n        album: 'album4',\n        id: 4\n      }, {\n        name: 'name5',\n        artist: 'artist5',\n        album: 'album5',\n        id: 5\n      }],\n      playlistName: 'My Playlist',\n      playlistTracks: [{\n        name: 'plname1',\n        artist: 'plartist1',\n        album: 'plalbum1',\n        id: 6\n      }, {\n        name: 'plname2',\n        artist: 'plartist2',\n        album: 'plalbum2',\n        id: 7\n      }, {\n        name: 'plname3',\n        artist: 'plartist3',\n        album: 'plalbum3',\n        id: 8\n      }, {\n        name: 'plname4',\n        artist: 'plartist4',\n        album: 'plalbum4',\n        id: 9\n      }, {\n        name: 'plname5',\n        artist: 'plartist5',\n        album: 'plalbum5',\n        id: 10\n      }]\n    };\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n  addTrack(track) {\n    let tracks = this.state.playlistTracks; /*refers to the current state of the above array*/\n    if (tracks.find(savedTrack => savedTrack.id === track)) {\n      return;\n    }\n    /* if it's anew track, add it to the array*/\n    tracks.push(track);\n    /*update teh state of playlistTracks to the new tracks array defined above*/\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.Uri);\n  }\n  search(term) {\n    Spotify.search(term).then;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-PlayList\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(PlayList, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","SearchBar","SearchResults","PlayList","Spotify","jsxDEV","_jsxDEV","App","Component","constructor","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","updatePlaylistName","bind","addTrack","removeTrack","savePlaylist","search","track","tracks","find","savedTrack","push","setState","filter","currentTrack","trackUris","map","Uri","term","then","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onRemove","onNameChange","onSave"],"sources":["C:/inetpub/wwwroot/Projects/Jamming/jamming/src/components/app/App.js"],"sourcesContent":["\nimport './App.css';\nimport React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport PlayList from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      searchResults: [{name: 'name1', artist: 'artist1', album: 'album1',id: 1},\n      {name: 'name2', artist: 'artist2', album: 'album2',id: 2},\n      {name: 'name3', artist: 'artist3', album: 'album3',id: 3},\n      {name: 'name4', artist: 'artist4', album: 'album4',id: 4},\n      {name: 'name5', artist: 'artist5', album: 'album5',id: 5}],\n      playlistName: 'My Playlist',\n      playlistTracks: [\n      {name: 'plname1', artist: 'plartist1', album: 'plalbum1',id: 6},\n      {name: 'plname2', artist: 'plartist2', album: 'plalbum2',id: 7},\n      {name: 'plname3', artist: 'plartist3', album: 'plalbum3',id: 8},\n      {name: 'plname4', artist: 'plartist4', album: 'plalbum4',id: 9},\n      {name: 'plname5', artist: 'plartist5', album: 'plalbum5',id:\n       10}]       \n         \n    }\n    this.updatePlaylistName=this.updatePlaylistName.bind(this);\n    this.addTrack=this.addTrack.bind(this);\n    this.removeTrack=this.removeTrack.bind(this);\n    this.savePlaylist=this.savePlaylist.bind(this);\n    this.search=this.search.bind(this);\n   \n  }\naddTrack(track){\n  let tracks=this.state.playlistTracks; /*refers to the current state of the above array*/\n  if (tracks.find(savedTrack =>savedTrack.id===track)){\nreturn;\n  }  \n  /* if it's anew track, add it to the array*/\n  tracks.push(track);\n  /*update teh state of playlistTracks to the new tracks array defined above*/\nthis.setState({playlistTracks: tracks});\n\n}\n\nremoveTrack(track){\n  let tracks=this.state.playlistTracks;\n  tracks=tracks.filter(currentTrack=>currentTrack.id!==track.id);\n  this.setState ({playlistTracks: tracks});\n\n\n}\n\nupdatePlaylistName(name){\nthis.setState ({playlistName: name});\n}\n  savePlaylist(){\n    const trackUris=this.state.playlistTracks.map(track=>track.Uri)\n    }\nsearch(term){\nSpotify.search(term).then\n}\n  render(){\n  \n  return (\n    <div>\n  <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n  <div className=\"App\">\n    <SearchBar onSearch={this.search}/>\n    <div className=\"App-PlayList\">\n    <SearchResults searchResults={this.state.searchResults}\n    onAdd= {this.addTrack}/>\n   <PlayList playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks}\n   onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist}/>\n    </div>\n  </div>\n</div>\n    \n   );\n  }\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}